name: ci

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Add Homebrew to $PATH
        run: |
          # mitigate https://github.com/actions/runner-images/issues/6283
          echo "/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin" >>"$GITHUB_PATH"
      - uses: actions/checkout@v4
      - name: Install formatters with Homebrew
        run: brew install prettier shfmt
      - name: Check shell script formatting with shfmt
        run: shfmt -d .
      - name: Check shell script formatting with ShellCheck
        run: |
          shopt -s globstar nullglob
          set -- **/*.{sh,bash}
          if [ -n "$1" ]; then
            echo "Checking $@"
            shellcheck "$@"
          else
            echo "No shell scripts for ShellCheck to check."
          fi
        shell: bash
      - name: Check web code formatting with Prettier
        run: prettier --check .
  build:
    runs-on: ubuntu-latest
    needs: [check]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/dovi_tool
          flavor: |
            latest=${{ github.ref_type == 'tag' || github.ref_name == 'main' }}
          tags: |
            type=ref,event=branch
            type=sha
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        if: ${{ github.ref_type == 'tag' || github.ref_name == 'main' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          context: ./dovi_tool
          file: ./dovi_tool/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref_type == 'tag' || github.ref_name == 'main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
